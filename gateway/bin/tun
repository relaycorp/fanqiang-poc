#!/usr/bin/env bash
set -o nounset
set -o errexit
set -o pipefail

TUN_INTERFACE_COUNT=5

# Assign each TUN interface a subnet with 512 addresses (half IPv4, half IPv6)
TUN_IPV4_SUBNET_PREFIX="10.0"
TUN_IF_IPV4_SUBNET_MASK="24"
TUN_IPV4_SUBNET="${TUN_IPV4_SUBNET_PREFIX}.100.0/20"
TUN_IPV6_SUBNET_PREFIX="fd00:1234"
TUN_IF_IPV6_SUBNET_MASK="120"
TUN_IPV6_SUBNET="${TUN_IPV6_SUBNET_PREFIX}::/96"

if [ $# -lt 1 ]; then
    echo "Usage: $0 <up|down>" >&2
    exit 1
fi

CURRENT_DIR="$(realpath "$(dirname "${BASH_SOURCE[0]}")")"
ROOT_DIR="$(realpath "${CURRENT_DIR}/..")"
CONFIG_DIR="${ROOT_DIR}/dev-config"

CONFIGURED_INTERNET_INTERFACE_NAME_FILE="${CONFIG_DIR}/internet-interface-name"

function get_default_interface() {
    local internet_route
    internet_route="$(ip route show default | head --lines 1)"

    if [ -z "${internet_route}" ]; then
        echo "Error: No internet route found" >&2
        exit 2
    fi

    echo "${internet_route}" | awk '{print $5}'
}

function set_internet_interface_name() {
    local internet_interface="$1"

    mkdir --parents "$(dirname "${CONFIGURED_INTERNET_INTERFACE_NAME_FILE}")"

    echo "${internet_interface}" > "${CONFIGURED_INTERNET_INTERFACE_NAME_FILE}"
}

function unset_internet_interface_name() {
    rm "${CONFIGURED_INTERNET_INTERFACE_NAME_FILE}"
}

function is_internet_interface_set() {
    [ -f "${CONFIGURED_INTERNET_INTERFACE_NAME_FILE}" ]
}

function get_internet_interface_name() {
    cat "${CONFIGURED_INTERNET_INTERFACE_NAME_FILE}"
}

function is_traffic_from_tun_interfaces_masqueraded() {
    local internet_interface="$1"

    if ! sudo iptables --table nat --check POSTROUTING --out-interface "${internet_interface}" --source "${TUN_IPV4_SUBNET}" --destination 0.0.0.0/0 --jump MASQUERADE 2>>/dev/null; then
        return 1
    fi

    if ! sudo ip6tables --table nat --check POSTROUTING --out-interface "${internet_interface}" --source "${TUN_IPV6_SUBNET}" --destination ::/0 --jump MASQUERADE 2>>/dev/null; then
        return 1
    fi

    return 0
}

function masquerade_traffic_from_tun_interfaces() {
    local internet_interface="$1"

    sudo iptables --table nat \
        --append POSTROUTING \
        --jump MASQUERADE \
        --out-interface "${internet_interface}" \
        --source "${TUN_IPV4_SUBNET}" \
        --destination 0.0.0.0/0

    sudo ip6tables --table nat \
        --append POSTROUTING \
        --jump MASQUERADE \
        --out-interface "${internet_interface}" \
        --source "${TUN_IPV6_SUBNET}" \
        --destination ::/0
}

function drop_masquerading_from_tun_interfaces() {
    local internet_interface="$1"

    sudo iptables --table nat \
        --delete POSTROUTING \
        --jump MASQUERADE \
        --out-interface "${internet_interface}" \
        --source "${TUN_IPV4_SUBNET}" \
        --destination 0.0.0.0/0

    sudo ip6tables --table nat \
        --delete POSTROUTING \
        --jump MASQUERADE \
        --out-interface "${internet_interface}" \
        --source "${TUN_IPV6_SUBNET}" \
        --destination ::/0
}

function create_tun_interface() {
    local interface_name="$1"
    local interface_ipv4_subnet="$2"
    local interface_ipv6_subnet="$3"
    local internet_interface="$4"
    local interface_owner="$5"

    if ip link show "${interface_name}" &> /dev/null; then
        sudo ip link set down dev "${interface_name}"
        sudo ip address flush dev "${interface_name}"
    else
        sudo ip tuntap add dev "${interface_name}" mode tun user "${interface_owner}"
    fi

    sudo ip address add "${interface_ipv4_subnet}" dev "${interface_name}"
    sudo ip -6 address add "${interface_ipv6_subnet}" dev "${interface_name}"
    sudo ip link set up dev "${interface_name}"

    echo "Configured ${interface_name} with ${interface_ipv4_subnet} and ${interface_ipv6_subnet}"
}

function delete_tun_interface() {
    local interface_name="$1"
    local interface_ipv4_subnet="$2"
    local interface_ipv6_subnet="$3"
    local internet_interface="$4"

    if ip link show "${interface_name}" &> /dev/null; then
        echo "Deleting ${interface_name}..."
        sudo ip link set down dev "${interface_name}"
        sudo ip tuntap del dev "${interface_name}" mode tun
    else
        echo "${interface_name} does not exist, skipping deletion"
    fi
}

function set_up() {
    local interface_owner="${1}"

    local internet_interface
    internet_interface="$(get_default_interface)"

    if ! grep --fixed-strings --quiet "1" "/proc/sys/net/ipv4/conf/${internet_interface}/forwarding"; then
        echo "Error: IPv4 forwarding is not enabled on ${internet_interface}" >&2
        exit 3
    fi

    if ! grep --fixed-strings --quiet "1" "/proc/sys/net/ipv6/conf/${internet_interface}/forwarding"; then
        echo "Error: IPv6 forwarding is not enabled on ${internet_interface}" >&2
        exit 3
    fi

    set_internet_interface_name "${internet_interface}"
    if ! is_traffic_from_tun_interfaces_masqueraded "${internet_interface}"; then
        masquerade_traffic_from_tun_interfaces "${internet_interface}"
        echo "Set up NAT to masquerade traffic from TUN interfaces to ${internet_interface}"
    else
        echo "NAT masquerading already set up for TUN interfaces to ${internet_interface}"
    fi

    for index in $(seq 0 $((TUN_INTERFACE_COUNT - 1))); do
        local interface_name="tun${index}"
        local interface_ipv4_subnet="${TUN_IPV4_SUBNET_PREFIX}.$(( 100 + index )).1/${TUN_IF_IPV4_SUBNET_MASK}"
        local interface_ipv6_subnet
        interface_ipv6_subnet="${TUN_IPV6_SUBNET_PREFIX}::$(printf '%x' "$index"):1/${TUN_IF_IPV6_SUBNET_MASK}"

        create_tun_interface \
            "${interface_name}" \
            "${interface_ipv4_subnet}" \
            "${interface_ipv6_subnet}" \
            "${internet_interface}" \
            "${interface_owner}"
    done

    echo "Updated routing rules for TUN interfaces"
}

function tear_down() {
    if is_internet_interface_set; then
        local internet_interface
        internet_interface="$(get_internet_interface_name)"

        for index in $(seq 0 $((TUN_INTERFACE_COUNT - 1))); do
            local interface_name="tun${index}"
            local interface_ipv4_subnet="${TUN_IPV4_SUBNET_PREFIX}.$(( 100 + index )).0/${TUN_IF_IPV4_SUBNET_MASK}"
            local interface_ipv6_subnet
            interface_ipv6_subnet="${TUN_IPV6_SUBNET_PREFIX}::$(printf '%x' "$index"):1/${TUN_IF_IPV6_SUBNET_MASK}"

            delete_tun_interface "${interface_name}" "${interface_ipv4_subnet}" "${interface_ipv6_subnet}" "${internet_interface}"
        done

        echo "Removed routing rules for TUN interfaces"

        if is_traffic_from_tun_interfaces_masqueraded "${internet_interface}"; then
            drop_masquerading_from_tun_interfaces "${internet_interface}"
            echo "Removed NAT masquerading for traffic from TUN interfaces to ${internet_interface}"
        fi

        unset_internet_interface_name
    fi
}

function show_status() {
    echo "Current routing table:"
    ip route show
    echo
    ip -6 route show

    echo
    echo "Current iptables NAT rules:"
    sudo iptables --table nat --list POSTROUTING
    echo
    sudo ip6tables --table nat --list POSTROUTING
}

case "$1" in
    up)
        set_up "${2:-$USER}"
        ;;
    down)
        tear_down
        ;;
    status)
        show_status
        ;;
    *)
        exit 1
        ;;
esac
